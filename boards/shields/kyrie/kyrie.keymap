/*
 * Copyright (c) 2022 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
//Check if necessary
#include <dt-bindings/zmk/outputs.h>
#include "customkeycodes.h"

#define CLMK 0
#define QWTY 1
#define NAV 2
#define ALT 3
#define SYS 4

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
                &kp ESC   &kp Q    &kp W    &kp F    &kp P     &kp B    						  &kp J    &kp L    &kp U     &kp Y    &kp SEMI  &kp BSPC
                &kp TAB   &kp A    &kp R    &kp S    &kp T     &kp G						      &kp K    &kp N    &kp E     &kp I    &kp O     &kp SQT
				&kp LGUI  &kp V    &kp X    &kp D    &kp C     &kp Z      &mo SYS	    &kp BSPC  &kp M    &kp H    &kp COMMA &kp DOT  &kp FSLH  &kp BSLH
											&kp LALT &kp LCTRL &kp SPACE  &mo ALT	    &mo NAV   &kp LSFT &kp RET  &kp RALT
            >;
        };
		
		qwerty_layer {
            bindings = <
                &kp ESC   &kp Q    &kp W    &kp E    &kp R     &kp T    						  &kp Y    &kp U    &kp I     &kp I    &kp P    &kp BSPC
                &kp TAB   &kp A    &kp S    &kp D    &kp F     &kp G						      &kp H    &kp J    &kp K     &kp L    &kp SEMI &kp SQT
				&kp LGUI  &kp Z    &kp X    &kp C    &kp V     &kp B      &mo SYS	    &kp BSPC  &kp N    &kp M    &kp COMMA &kp DOT  &kp FSLH &kp BSLH
											&kp LALT &kp LCTRL &kp SPACE  &mo ALT	    &mo NAV   &kp LSFT &kp RET  &kp RALT
            >;
        };
		
		navigation_layer {
			bindings = <
				&kp GRAVE &kp CARET &kp PG_UP &kp UP   &kp HOME  &kp COLON					     &kp F1   &kp F2   &kp F3   &kp F4   &kp F5   &kp DEL
				&kp DEL   &kp HOME  &kp LEFT  &kp DOWN &kp RIGHT &kp SEMI 					     &kp F6   &kp F7   &kp F8   &kp F9   &kp F10  &kp A
				&trans    &kp AMPS  &kp PG_DN &kp DOWN &kp END   &kp DQT   &tog QWTY    &kp LSFT &kp F11  &kp F12  &none    &none    &none    &kp DLLR
											  &trans   &trans    &trans    &trans       &trans   &trans   &none    &BOOT
			>;
		};
		
		alt_layer {
			bindings = <
				&kp ESC   &kp EXCL   &kp LPAR   &kp UNDER  &kp RPAR  &kp EXCL			   	       &kp COMMA &kp N7    &kp N8    &kp N9    &kp SEMI  &kp DEL
				&trans    &kp QMARK  &kp LBRC   &kp SEMI   &kp RBRC  &kp AT					       &kp COMMA &kp N4    &kp N5    &kp N6    &kp N0    &kp A
				&trans    &kp PIPE   &kp LBKT   &kp HASH   &kp RBKT  &kp PRCNT &trans     &kp STAR &kp DOT   &kp N1    &kp N2    &kp N3    &kp N0    &kp LNLCK
												&kp LT     &kp GT    &trans    &trans     &kp PLUS &kp MINUS &kp EQUAL &kp FSLH
			>;
		};

		system_layer {
			bindings = <
				&BOOT   &none   &kp C_PREV	 &kp C_PP   &kp C_NEXT    &kp LC(X)				             &bt SEL 0    &bt SEL 1    &bt SEL 2    &bt SEL 3   &bt SEL 4    &BOOT
				&RESET  &none   &kp LC(LEFT) &kp C_PP   &kp LC(RIGHT) &kp LC(C)			        		 &none        &none        &none        &none       &none        &RESET
				&IDLE   &none   &kp CSLEFT   &kp C_PP   &kp CSRIGHT   &kp LC(V)   &trans       &trans    &none        &none        &none        &none       &none        &IDLE
										     &bt BT_CLR &out TOG      &none       &trans       &none     &kp LSFT     &none        &bt BT_CLR
			>;
		};
    };
};